(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{418:function(s,a,t){"use strict";t.r(a);var n=t(2),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"一、题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、题目"}},[s._v("#")]),s._v(" 一、题目")]),s._v(" "),a("ol",{attrs:{start:"448"}},[a("li",[s._v("找到所有数组中消失的数字\n给你一个含 n 个整数的数组 nums ，其中 nums[i] 在区间 [1, n] 内。请你找出所有在 [1, n] 范围内但没有出现在 nums 中的数字，并以数组的形式返回结果。")])]),s._v(" "),a("p",[s._v("示例 1：")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("输入：nums = [4,3,2,7,8,2,3,1]\n输出：[5,6]\n")])])]),a("p",[s._v("示例 2：")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("输入：nums = [1,1]\n输出：[2]\n")])])]),a("p",[s._v("提示：")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("- n == nums.length\n- 1 <= n <= 105\n- 1 <= nums[i] <= n\n")])])]),a("p",[s._v("进阶：你能在不使用额外空间且时间复杂度为 O(n) 的情况下解决这个问题吗? 你可以假定返回的数组不算在额外空间内。")]),s._v(" "),a("p",[s._v("来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/find-all-numbers-disappeared-in-an-array")]),s._v(" "),a("h2",{attrs:{id:"二、分析解题思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、分析解题思路"}},[s._v("#")]),s._v(" 二、分析解题思路")]),s._v(" "),a("p",[s._v("如题：给出一个有n个整数的数组。找出所有在 [1,n] 范围内的但是没有出现在nums数组中的数字， 找到他们并以数组的形式返回。")]),s._v(" "),a("h3",{attrs:{id:"思路一-遍历-indexof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思路一-遍历-indexof"}},[s._v("#")]),s._v(" 思路一 （遍历+indexOf）")]),s._v(" "),a("p",[s._v("根据案例可以有大概思路：")]),s._v(" "),a("ul",[a("li",[s._v("计算出这个数组的长度，"),a("code",[s._v("len = nums.length")]),s._v(" ,1~len")]),s._v(" "),a("li",[s._v("遍历找出不在1～len的数i，不在nums中的数。使用indexOf")]),s._v(" "),a("li",[s._v("即得到结果")])]),s._v(" "),a("p",[s._v("举例：")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let nums = [4,5,6,8,9,1,5,2,5,9]\n \nnums的长度是：10， [1,n] 就是1～10 ，[1,2,3,4,5,6,7,8,9,10]\n将nums进行升序处理：nums=[1,2,4,5,5,5,6,8,9,9]\n遍历对比后可以得到未出现的数：[3,7,10]\n")])])]),a("p",[s._v("代码见3.1")]),s._v(" "),a("h3",{attrs:{id:"思路二-哈希表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思路二-哈希表"}},[s._v("#")]),s._v(" 思路二（哈希表）")]),s._v(" "),a("h2",{attrs:{id:"三、js代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、js代码"}},[s._v("#")]),s._v(" 三、JS代码")]),s._v(" "),a("h3",{attrs:{id:"_3-1-遍历-indexof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-遍历-indexof"}},[s._v("#")]),s._v(" 3.1 （遍历+indexOf）")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * @param {number[]} nums\n * @return {number[]}\n */\n var findDisappearedNumbers = function(nums) {\n    let lessNums = []\n    let len = nums.length\n    nums.sort((a,b)=>a-b)\n    for(let i=1;i<=len;i++){\n        if(nums.indexOf(i) == -1){\n            lessNums.push(i)\n        }\n    }\n    return lessNums\n};\n\nlet nums = [4,5,6,8,9,1,5,2,5,9]\nlet result = findDisappearedNumbers(nums);\nconsole.log(result)\n")])])]),a("h3",{attrs:{id:"_3-2-哈希表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-哈希表"}},[s._v("#")]),s._v(" 3.2 哈希表")]),s._v(" "),a("h2",{attrs:{id:"四、总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、总结"}},[s._v("#")]),s._v(" 四、总结")]),s._v(" "),a("p",[s._v("为什么indexOf的方法耗时那么久，咱们一起研究研究JavaScript中的indexOf")]),s._v(" "),a("h3",{attrs:{id:"_4-1-知识点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-知识点"}},[s._v("#")]),s._v(" 4.1 知识点")]),s._v(" "),a("h3",{attrs:{id:"_4-2-最优解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-最优解"}},[s._v("#")]),s._v(" 4.2 最优解")])])}),[],!1,null,null,null);a.default=e.exports}}]);