(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{415:function(t,a,s){"use strict";s.r(a);var e=s(2),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"一、题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、题目"}},[t._v("#")]),t._v(" 一、题目")]),t._v(" "),a("ol",{attrs:{start:"118"}},[a("li",[t._v("杨辉三角")])]),t._v(" "),a("p",[t._v("给定一个非负整数 "),a("code",[t._v("numRows")]),t._v("，生成"),a("code",[t._v("「杨辉三角」")]),t._v("的前 "),a("code",[t._v("numRows")]),t._v(" 行。")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("「杨辉三角」")]),t._v("中，每个数是它左上方和右上方的数的和。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6e3a71d629ce4bee88d1b486651e277a~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),a("p",[t._v("示例 1:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("输入: numRows = 5\n输出: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]\n")])])]),a("p",[t._v("示例 2:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("输入: numRows = 1\n输出: [[1]]\n")])])]),a("p",[t._v("提示:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1 <= numRows <= 30\n")])])]),a("p",[t._v("来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/pascals-triangle")]),t._v(" "),a("h2",{attrs:{id:"二、分析解题思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、分析解题思路"}},[t._v("#")]),t._v(" 二、分析解题思路")]),t._v(" "),a("h3",{attrs:{id:"_2-1思路一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1思路一"}},[t._v("#")]),t._v(" 2.1思路一")]),t._v(" "),a("p",[t._v("分析杨辉三角：")]),t._v(" "),a("p",[t._v("1.杨辉三角的每行的最左边和最右边的元素都是1。")]),t._v(" "),a("p",[t._v("2.在杨辉三角中， 除了每行的第一个和最后一个元素之外，每个数是它的左上方和右上方的数的和。")]),t._v(" "),a("p",[t._v("3.输入"),a("code",[t._v("numRows = 5")]),t._v(",杨辉三角会有5行，且每行的元素个数根据行数递增，等于行数。推算， "),a("code",[t._v("let i=0;i<numRows;i++")]),t._v(",第i行的元素个数为"),a("code",[t._v("i+1")]),t._v(",初始化每行元素为1。")]),t._v(" "),a("p",[t._v("4.计算中间的元素的值：两次for循环， 初始化行数，并且计算中间的元素的值：左边上方："),a("code",[t._v("arr[i-1][j-1]")]),t._v(",右上方："),a("code",[t._v("arr[i-1][j]")])]),t._v(" "),a("h2",{attrs:{id:"三、js代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、js代码"}},[t._v("#")]),t._v(" 三、JS代码")]),t._v(" "),a("h3",{attrs:{id:"_3-1-思路一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-思路一"}},[t._v("#")]),t._v(" 3.1 思路一")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/**\n * @param {number} numRows\n * @return {number[][]}\n */\n var generate = function(numRows) {\n    let arr = [];\n    for(let i=0;i<numRows;i++){\n        // 初始化\n        const rows = new Array(i+1).fill(1);\n        // 最左边和最右边的值都是1，所以j=0和j=length-1;不需要再单独计算\n        for(let j=1;j<rows.length-1;j++){\n            // 上一行的的下标：i-1, 左上角：j-1 和右上角：j\n            rows[j] = arr[i-1][j]+arr[i-1][j-1]\n        }\n        arr.push(rows);\n    }\n    return arr;\n};\nlet numRows = 5;\nlet result = generate(numRows);\nconsole.log(result)\n\n")])])]),a("h2",{attrs:{id:"四、总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、总结"}},[t._v("#")]),t._v(" 四、总结")]),t._v(" "),a("p",[t._v("复杂度：")]),t._v(" "),a("p",[t._v("时间复杂度：O(numRows^2)")]),t._v(" "),a("p",[t._v("空间复杂度：O(1)。")])])}),[],!1,null,null,null);a.default=r.exports}}]);